## Request Mapping

| Source (JSON)                                           | Target (XML)                                                                          | Comments / Instruction (summary level)                                                                          |
| ------------------------------------------------------- | ------------------------------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------- |
| `airShoppingRequest.pointOfSale`                        | `OTA_AirLowFareSearchRQ/POS`                                                          | Copy core POS values;                                           |
| `airShoppingRequest.distributionChain`                  | `OTA_AirLowFareSearchRQ/POS`                                                          | Map org/type fields to `RequestorID` attributes.                                          |
| `airShoppingRequest.flightRequest.originDestinations[]` | `OTA_AirLowFareSearchRQ/OriginDestinationInformation[]`                               | One JSON OD ⇒ one XML block. Use array index for `RPH`. Convert date/range formats.                             |
| `airShoppingRequest.paxList.pax[]`                      | `OTA_AirLowFareSearchRQ/TravelerInfoSummary/AirTravelerAvail/PassengerTypeQuantity[]` | Copy PTC & quantity. Sum quantities for `SeatsRequested`.                                                       |
| `airShoppingRequest.offerCriteria`                      | `OTA_AirLowFareSearchRQ/TravelPreferences`                                            | Map max connections, carrier prefs, cabin, brands to XML prefs (`VendorPref`, `CabinPref`, `InterlineBrands`).  |
| `airShoppingRequest.pricingOptions`                     | `OTA_AirLowFareSearchRQ/TravelerInfoSummary/PriceInfoInformation`                     | Map currency & pricing flags. Booleans become XML attributes or indicator nodes.                                |
| `airShoppingRequest.responseOptions`                    | `OTA_AirLowFareSearchRQ/TPA_Extensions`                                               | Map request type, service tag, alternate dates, tax split flags. Handle enum→attribute mapping for tax levels.  |
| *Other / not directly supported fields*                 | Custom `TPA_Extensions` or adapter-side logic                                         | For fields with no direct XML counterpart (e.g. refundableOnly), apply filter logic or define custom extension. |

## Response Mapping

### Offer (Itinerary-level pricing)
| Source (JSON)                                         | Target (XML)                                                          |
|-------------------------------------------------------|------------------------------------------------------------------------|
| carrierOffers[].offer[].price.baseAmount              | PricedItinerary/ItinTotalFare/BaseFare                                |
| carrierOffers[].offer[].price.fareConstruction        | PricedItinerary/ItinTotalFare/FareConstruction                        |
| carrierOffers[].offer[].price.totalAmount             | PricedItinerary/ItinTotalFare/TotalFare                               |
| carrierOffers[].offer[].price.taxSummary.total        | PricedItinerary/ItinTotalFare/Taxes/Tax[@TaxCode='TOTALTAX'] (or sum)  |
| carrierOffers[].offer[].price.taxSummary.tax[]        | PassengerFare/Taxes/Tax                                                |
| carrierOffers[].offer[].price.taxSummary.summary[]    | PassengerFare/Taxes/TaxSummary                                         |

### Offer Items & Fare Details (per passenger)
| Source (JSON)                                         | Target (XML)                                                          |
|-------------------------------------------------------|------------------------------------------------------------------------|
| carrierOffers[].offer[].offerItem[].fareDetail[]      | PTC_FareBreakdown/PassengerFare                                       |
| fareDetail[].price.baseAmount                         | PassengerFare/BaseFare                                                |
| fareDetail[].price.fareConstruction                   | PassengerFare/FareConstruction                                        |
| fareDetail[].price.totalAmount                        | PassengerFare/TotalFare                                               |
| fareDetail[].price.taxSummary.total                   | PassengerFare/Taxes/Tax[@TaxCode='TOTALTAX'] (if present)             |
| fareDetail[].price.taxSummary.tax[]                   | PassengerFare/Taxes/Tax                                               |
| fareDetail[].price.taxSummary.summary[]               | PassengerFare/Taxes/TaxSummary                                        |

### Fare Components (component-level pricing & taxes)
| Source (JSON)                                                     | Target (XML)                                                                                  |
|-------------------------------------------------------------------|------------------------------------------------------------------------------------------------|
| fareDetail[].fareComponent[]                                      | PassengerFare/Taxes/TPA_Extensions/FareComponents/FareComponent                                |
| fareComponent[].segmentRefId[]                                    | FareComponent/Segment[@LegIndex='x' and @FlightIndex='y'] (map to paxSegmentId)               |
| fareComponent[].extension.programId                               | FareComponent/@ProgramID                                                                       |
| fareComponent[].extension.programDescription                      | FareComponent/@ProgramDescription                                                              |
| fareComponent[].price.baseAmount                                  | FareComponent/BaseFare                                                                         |
| fareComponent[].price.totalAmount                                 | FareComponent/TotalFare                                                                        |
| fareComponent[].price.taxSummary.tax[]                            | FareComponentsTaxes/FareComponentTaxes/Tax                                                     |
| fareComponent[].price.taxSummary.summary[]                        | FareComponentsTaxes/FareComponentTaxes/TaxSummary                                              |

### Segment- & Leg-level Taxes (if you expose them)
| Source (JSON)                                                     | Target (XML)                                                                                  |
|-------------------------------------------------------------------|------------------------------------------------------------------------------------------------|
| paxSegmentList[].price.taxSummary.tax[] (if implemented)          | TPA_Extensions/LegsTaxes/LegTax/Tax (or equivalent split-by-leg section)                       |
| paxSegmentList[].price.taxSummary.summary[] (if implemented)      | TPA_Extensions/LegsTaxes/LegTax/TaxSummary                                                     |
